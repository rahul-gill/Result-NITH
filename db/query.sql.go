// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: query.sql

package db

import (
	"context"
	"database/sql"
)

const createStudent = `-- name: CreateStudent :one
INSERT INTO student(roll_number, name, fathers_name, batch, branch, latest_semester, cgpi)
VALUES (?, ?, ?, ?, ?, ?, ?)
RETURNING roll_number, name, fathers_name, batch, branch, latest_semester, cgpi
`

type CreateStudentParams struct {
	RollNumber     string          `json:"roll_number"`
	Name           sql.NullString  `json:"name"`
	FathersName    sql.NullString  `json:"fathers_name"`
	Batch          sql.NullString  `json:"batch"`
	Branch         sql.NullString  `json:"branch"`
	LatestSemester sql.NullInt64   `json:"latest_semester"`
	Cgpi           sql.NullFloat64 `json:"cgpi"`
}

func (q *Queries) CreateStudent(ctx context.Context, arg CreateStudentParams) (Student, error) {
	row := q.db.QueryRowContext(ctx, createStudent,
		arg.RollNumber,
		arg.Name,
		arg.FathersName,
		arg.Batch,
		arg.Branch,
		arg.LatestSemester,
		arg.Cgpi,
	)
	var i Student
	err := row.Scan(
		&i.RollNumber,
		&i.Name,
		&i.FathersName,
		&i.Batch,
		&i.Branch,
		&i.LatestSemester,
		&i.Cgpi,
	)
	return i, err
}
